
import core.sys.windows.winuser;

ushort[string]  vkeyCodeOf;
INPUT[][string] inputOf;

static this(){
    vkeyCodeOf = [
        "LBUTTON"               : VK_LBUTTON,
        "RBUTTON"               : VK_RBUTTON,
        "CANCEL"                : VK_CANCEL,
        "MBUTTON"               : VK_MBUTTON,
        "XBUTTON1"              : VK_XBUTTON1,
        "XBUTTON2"              : VK_XBUTTON2,
        "BACK"                  : VK_BACK,
        "BACKSPACE"             : VK_BACK,
        "TAB"                   : VK_TAB,
        "CLEAR"                 : VK_CLEAR,
        "RETURN"                : VK_RETURN,
        "ENTER"                 : VK_RETURN,
        "SHIFT"                 : VK_SHIFT,
        "CONTROL"               : VK_CONTROL,
        "ALT"                   : VK_MENU,
        "MENU"                  : VK_MENU,
        "PAUSE"                 : VK_PAUSE,
        "BREAK"                 : VK_PAUSE,
        "CAPITAL"               : VK_CAPITAL,
        "KANA"                  : VK_KANA,
        "HANGEUL"               : VK_HANGEUL,
        "HANGUL"                : VK_HANGUL,
        "JUNJA"                 : VK_JUNJA,
        "FINAL"                 : VK_FINAL,
        "HANJA"                 : VK_HANJA,
        "KANJI"                 : VK_KANJI,
        "ESCAPE"                : VK_ESCAPE,
        "ESC"                   : VK_ESCAPE,
        "CONVERT"               : VK_CONVERT,
        "NONCONVERT"            : VK_NONCONVERT,
        "ACCEPT"                : VK_ACCEPT,
        "MODECHANGE"            : VK_MODECHANGE,
        "SPACE"                 : VK_SPACE,
        "PRIOR"                 : VK_PRIOR,
        "PGUP"                  : VK_PRIOR,
        "NEXT"                  : VK_NEXT,
        "PGDN"                  : VK_NEXT,
        "END"                   : VK_END,
        "HOME"                  : VK_HOME,
        "LEFT"                  : VK_LEFT,
        "UP"                    : VK_UP,
        "RIGHT"                 : VK_RIGHT,
        "DOWN"                  : VK_DOWN,
        "SELECT"                : VK_SELECT,
        "PRINT"                 : VK_PRINT,
        "EXECUTE"               : VK_EXECUTE,
        "SNAPSHOT"              : VK_SNAPSHOT,
        "PRINTSCREEN"           : VK_SNAPSHOT,
        "INSERT"                : VK_INSERT,
        "DELETE"                : VK_DELETE,
        "HELP"                  : VK_HELP,
        //"LWIN"                  : VK_LWIN,
        //"RWIN"                  : VK_RWIN,
        //"APPS"                  : VK_APPS,
        "NUMPAD0"               : VK_NUMPAD0,
        "NUMPAD1"               : VK_NUMPAD1,
        "NUMPAD2"               : VK_NUMPAD2,
        "NUMPAD3"               : VK_NUMPAD3,
        "NUMPAD4"               : VK_NUMPAD4,
        "NUMPAD5"               : VK_NUMPAD5,
        "NUMPAD6"               : VK_NUMPAD6,
        "NUMPAD7"               : VK_NUMPAD7,
        "NUMPAD8"               : VK_NUMPAD8,
        "NUMPAD9"               : VK_NUMPAD9,
        "MULTIPLY"              : VK_MULTIPLY,
        "ADD"                   : VK_ADD,
        "SEPARATOR"             : VK_SEPARATOR,
        "SUBTRACT"              : VK_SUBTRACT,
        "DECIMAL"               : VK_DECIMAL,
        "DIVIDE"                : VK_DIVIDE,
        "F1"                    : VK_F1,
        "F2"                    : VK_F2,
        "F3"                    : VK_F3,
        "F4"                    : VK_F4,
        "F5"                    : VK_F5,
        "F6"                    : VK_F6,
        "F7"                    : VK_F7,
        "F8"                    : VK_F8,
        "F9"                    : VK_F9,
        "F10"                   : VK_F10,
        "F11"                   : VK_F11,
        "F12"                   : VK_F12,
        "F13"                   : VK_F13,
        "F14"                   : VK_F14,
        "F15"                   : VK_F15,
        "F16"                   : VK_F16,
        "F17"                   : VK_F17,
        "F18"                   : VK_F18,
        "F19"                   : VK_F19,
        "F20"                   : VK_F20,
        "F21"                   : VK_F21,
        "F22"                   : VK_F22,
        "F23"                   : VK_F23,
        "F24"                   : VK_F24,
        "NUMLOCK"               : VK_NUMLOCK,
        "SCROLL"                : VK_SCROLL,
        "LSHIFT"                : VK_LSHIFT,
        //"RSHIFT"                : VK_RSHIFT,      // requires scancode to work properly, see inputOf map below
        "LCONTROL"              : VK_LCONTROL,
        //"RCONTROL"              : VK_RCONTROL,    // requires extendedkey
        "LALT"                  : VK_LMENU,
        "RALT"                  : VK_RMENU,
        "LMENU"                 : VK_LMENU,
        "RMENU"                 : VK_RMENU,
        //"BROWSER_BACK"          : VK_BROWSER_BACK,
        //"BROWSER_FORWARD"       : VK_BROWSER_FORWARD,
        //"BROWSER_REFRESH"       : VK_BROWSER_REFRESH,
        //"BROWSER_STOP"          : VK_BROWSER_STOP,
        //"BROWSER_SEARCH"        : VK_BROWSER_SEARCH,
        //"BROWSER_FAVORITES"     : VK_BROWSER_FAVORITES,
        //"BROWSER_HOME"          : VK_BROWSER_HOME,
        //"VOLUME_MUTE"           : VK_VOLUME_MUTE,
        //"VOLUME_DOWN"           : VK_VOLUME_DOWN,
        //"VOLUME_UP"             : VK_VOLUME_UP,
        //"MEDIA_NEXT_TRACK"      : VK_MEDIA_NEXT_TRACK,
        //"MEDIA_PREV_TRACK"      : VK_MEDIA_PREV_TRACK,
        //"MEDIA_STOP"            : VK_MEDIA_STOP,
        //"MEDIA_PLAY_PAUSE"      : VK_MEDIA_PLAY_PAUSE,
        "LAUNCH_MAIL"           : VK_LAUNCH_MAIL,
        "LAUNCH_MEDIA_SELECT"   : VK_LAUNCH_MEDIA_SELECT,
        "LAUNCH_APP1"           : VK_LAUNCH_APP1,
        "LAUNCH_APP2"           : VK_LAUNCH_APP2,
        "OEM_1"                 : VK_OEM_1,
        "OEM_PLUS"              : VK_OEM_PLUS,
        "OEM_COMMA"             : VK_OEM_COMMA,
        "OEM_MINUS"             : VK_OEM_MINUS,
        "OEM_PERIOD"            : VK_OEM_PERIOD,
        "OEM_2"                 : VK_OEM_2,
        "OEM_3"                 : VK_OEM_3,
        "OEM_4"                 : VK_OEM_4,
        "OEM_5"                 : VK_OEM_5,
        "OEM_6"                 : VK_OEM_6,
        "OEM_7"                 : VK_OEM_7,
        "OEM_8"                 : VK_OEM_8,
        "OEM_102"               : VK_OEM_102,
        "PROCESSKEY"            : VK_PROCESSKEY,
        //"PACKET"                : VK_PACKET,
        "ATTN"                  : VK_ATTN,
        "CRSEL"                 : VK_CRSEL,
        "EXSEL"                 : VK_EXSEL,
        "EREOF"                 : VK_EREOF,
        "PLAY"                  : VK_PLAY,
        "ZOOM"                  : VK_ZOOM,
        //"NONAME"                : VK_NONAME,
        "PA1"                   : VK_PA1,
        "OEM_CLEAR"             : VK_OEM_CLEAR,
        "0"                     : cast(ushort)'0',
        "1"                     : cast(ushort)'1',
        "2"                     : cast(ushort)'2',
        "3"                     : cast(ushort)'3',
        "4"                     : cast(ushort)'4',
        "5"                     : cast(ushort)'5',
        "6"                     : cast(ushort)'6',
        "7"                     : cast(ushort)'7',
        "8"                     : cast(ushort)'8',
        "9"                     : cast(ushort)'9',
        "A"                     : cast(ushort)'A',
        "B"                     : cast(ushort)'B',
        "C"                     : cast(ushort)'C',
        "D"                     : cast(ushort)'D',
        "E"                     : cast(ushort)'E',
        "F"                     : cast(ushort)'F',
        "G"                     : cast(ushort)'G',
        "H"                     : cast(ushort)'H',
        "I"                     : cast(ushort)'I',
        "J"                     : cast(ushort)'J',
        "K"                     : cast(ushort)'K',
        "L"                     : cast(ushort)'L',
        "M"                     : cast(ushort)'M',
        "N"                     : cast(ushort)'N',
        "O"                     : cast(ushort)'O',
        "P"                     : cast(ushort)'P',
        "Q"                     : cast(ushort)'Q',
        "R"                     : cast(ushort)'R',
        "S"                     : cast(ushort)'S',
        "T"                     : cast(ushort)'T',
        "U"                     : cast(ushort)'U',
        "V"                     : cast(ushort)'V',
        "W"                     : cast(ushort)'W',
        "X"                     : cast(ushort)'X',
        "Y"                     : cast(ushort)'Y',
        "Z"                     : cast(ushort)'Z',
    ];
    inputOf = [
        "MOUSE LEFT CLICK" : [
            INPUT(INPUT_MOUSE, MOUSEINPUT(0, 0, 0, MOUSEEVENTF_LEFTDOWN, 0, 0)),
            INPUT(INPUT_MOUSE, MOUSEINPUT(0, 0, 0, MOUSEEVENTF_LEFTUP, 0, 0))
        ],
        "MOUSE RIGHT CLICK" : [
            INPUT(INPUT_MOUSE, MOUSEINPUT(0, 0, 0, MOUSEEVENTF_RIGHTDOWN, 0, 0)),
            INPUT(INPUT_MOUSE, MOUSEINPUT(0, 0, 0, MOUSEEVENTF_RIGHTUP, 0, 0))
        ],
        "MOUSE MIDDLE CLICK" : [
            INPUT(INPUT_MOUSE, MOUSEINPUT(0, 0, 0, MOUSEEVENTF_MIDDLEDOWN, 0, 0)),
            INPUT(INPUT_MOUSE, MOUSEINPUT(0, 0, 0, MOUSEEVENTF_MIDDLEUP, 0, 0))
        ],
        "MOUSE 4" : [
            INPUT(INPUT_MOUSE, MOUSEINPUT(0, 0, XBUTTON1, MOUSEEVENTF_XDOWN, 0, 0)),
            INPUT(INPUT_MOUSE, MOUSEINPUT(0, 0, XBUTTON1, MOUSEEVENTF_XUP, 0, 0)),
        ],
        "MOUSE 5" : [
            INPUT(INPUT_MOUSE, MOUSEINPUT(0, 0, XBUTTON2, MOUSEEVENTF_XDOWN, 0, 0)),
            INPUT(INPUT_MOUSE, MOUSEINPUT(0, 0, XBUTTON2, MOUSEEVENTF_XUP, 0, 0)),
        ],
        "MOUSE WHEEL UP" : [
            INPUT(INPUT_MOUSE, MOUSEINPUT(0, 0, 1, MOUSEEVENTF_WHEEL, 0)),
        ],
        "MOUSE WHEEL DOWN" : [
            INPUT(INPUT_MOUSE, MOUSEINPUT(0, 0, -1, MOUSEEVENTF_WHEEL, 0)),
        ],
        "MOUSE WHEEL LEFT" : [
            INPUT(INPUT_MOUSE, MOUSEINPUT(0, 0, 1, 0x01000, 0)),
        ],
        "MOUSE WHEEL RIGHT" : [
            INPUT(INPUT_MOUSE, MOUSEINPUT(0, 0, -1, 0x01000, 0)),
        ],
        "RSHIFT": [
            INPUTk(KEYBDINPUT(VK_RSHIFT, 0x36, KEYEVENTF_EXTENDEDKEY, 0, 0)),
            INPUTk(KEYBDINPUT(VK_RSHIFT, 0x36, KEYEVENTF_KEYUP | KEYEVENTF_EXTENDEDKEY, 0, 0)),
        ],
        "RCONTROL": [
            INPUTk(KEYBDINPUT(VK_RCONTROL, 0, KEYEVENTF_EXTENDEDKEY, 0, 0)),
            INPUTk(KEYBDINPUT(VK_RCONTROL, 0, KEYEVENTF_KEYUP | KEYEVENTF_EXTENDEDKEY, 0, 0)),
        ],
        "NUMENTER": [
            INPUTk(KEYBDINPUT(VK_RETURN, 0, KEYEVENTF_EXTENDEDKEY, 0, 0)),
            INPUTk(KEYBDINPUT(VK_RETURN, 0, KEYEVENTF_KEYUP | KEYEVENTF_EXTENDEDKEY, 0, 0)),
        ],
    ];
}

// workaround for lack of union literals
private INPUT INPUTk(KEYBDINPUT ki){
    INPUT input;
    input.type = INPUT_KEYBOARD;
    input.ki = ki;
    return input;
}